<snippet>
	<content><![CDATA[
/**
 * Supports an HTML select list of ${2:hellos}
 *
 * @package		${1:Hello}
 * @subpackage	com_${1/(.+)/\L\1/g}
 * @since		2.5
 */
class JFormFieldOrdering extends JFormField
{
	/**
	 * The form field type.
	 *
	 * @var		string
	 * @since	2.5
	 */
	protected \$type = 'Ordering';

	/**
	 * Method to get the field input markup.
	 *
	 * @return	string	The field input markup.
	 * @since	2.5
	 */
	protected function getInput()
	{
		// Initialize variables.
		\$html = array();
		\$attr = '';

		// Initialize some field attributes.
		\$attr .= \$this->element['class'] ? ' class="'.(string) \$this->element['class'].'"' : '';
		\$attr .= ((string) \$this->element['disabled'] == 'true') ? ' disabled="disabled"' : '';
		\$attr .= \$this->element['size'] ? ' size="'.(int) \$this->element['size'].'"' : '';

		// Initialize JavaScript field attributes.
		\$attr .= \$this->element['onchange'] ? ' onchange="'.(string) \$this->element['onchange'].'"' : '';

		// Get some field values from the form.
		\$${3:hello}Id	= (int) \$this->form->getValue('id');
		\$categoryId	= (int) \$this->form->getValue('catid');

		// Build the query for the ordering list.
		\$query = 'SELECT ordering AS value, ${5:title} AS text' .
				' FROM #__${4:hellos}' .
				' WHERE catid = ' . (int) \$categoryId .
				' ORDER BY ordering';

		// Create a read-only list (no ${5}) with a hidden input to store the value.
		if ((string) \$this->element['readonly'] == 'true') {
			\$html[] = JHtml::_('list.ordering', '', \$query, trim(\$attr), \$this->value, \$${3}Id ? 0 : 1);
			\$html[] = '<input type="hidden" name="'.\$this->${5}.'" value="'.\$this->value.'"/>';
		}
		// Create a regular list.
		else {
			\$html[] = JHtml::_('list.ordering', \$this->${5}, \$query, trim(\$attr), \$this->value, \$${3}Id ? 0 : 1);
		}

		return implode(\$html);
	}
}

]]></content>
<tabTrigger>jfieldordering</tabTrigger>
</snippet>
